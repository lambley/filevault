name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        path: [client, server]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd ${{ matrix.path }}
          npm ci

      - name: Run linter
        run: |
          cd ${{ matrix.path }}
          npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        path: [client, server]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd ${{ matrix.path }}
          npm ci

      - name: Run tests
        run: |
          cd ${{ matrix.path }}
          npm test

  Sonarless-Scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Solarless Scan
        uses: gitricko/sonarless@v1.2
        with:
          sonar-metrics-path: './sonar-metrics.json'

      - name: Check Sonar Metrics - No Vulnerabilities
        run: |
          echo "Checking for any vulnerabilities in Sonar Metrics JSON"
          VULN=$(cat ./sonar-metrics.json | jq -r '.component.measures[] | select(.metric == "vulnerabilities").value')
          echo "# of vulnerabilities = ${VULN}"
          [ ${VULN} -eq "0" ]
